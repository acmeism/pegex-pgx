{
   "+grammar" : "pegex",
   "+top" : "grammar",
   "+version" : "0.1.0",
   "all_group" : {
      "+min" : 1,
      ".ref" : "rule_part",
      ".sep" : {
         ".rgx" : "\\s*"
      }
   },
   "any_group" : {
      "+min" : "2",
      ".ref" : "rule_part",
      ".sep" : {
         ".rgx" : "\\s*\\|\\s*"
      }
   },
   "bracketed_group" : {
      ".all" : [
         {
            ".rgx" : "([\\.]?)\\(\\s*"
         },
         {
            ".ref" : "rule_group"
         },
         {
            ".rgx" : "\\s*\\)((?:[\\*\\+\\?]|[0-9]+(?:\\-[0-9]+|\\+)?)?)"
         }
      ]
   },
   "comment" : {
      ".rgx" : "(?:[\\ \\t]*\\r?\\n|\\#.*\\r?\\n)"
   },
   "ending" : {
      ".rgx" : "\\s*?(?:\\n\\s*|;\\s*|\\z)"
   },
   "error_message" : {
      ".rgx" : "`([^`\\r\\n]*)`"
   },
   "grammar" : {
      ".all" : [
         {
            ".ref" : "meta_section"
         },
         {
            ".ref" : "rule_section"
         }
      ]
   },
   "meta_definition" : {
      ".all" : [
         {
            ".rgx" : "%"
         },
         {
            ".ref" : "meta_name"
         },
         {
            ".rgx" : "[\\ \\t]+"
         },
         {
            ".ref" : "meta_value"
         }
      ]
   },
   "meta_name" : {
      ".rgx" : "(grammar|extends|include|version)"
   },
   "meta_section" : {
      "+min" : 0,
      ".any" : [
         {
            ".ref" : "meta_definition"
         },
         {
            "-skip" : 1,
            ".ref" : "comment"
         }
      ]
   },
   "meta_value" : {
      ".rgx" : "[\\ \\t]*([^;\\n]*?)[\\ \\t]*\\s*?(?:\\n\\s*|;\\s*|\\z)"
   },
   "regular_expression" : {
      ".rgx" : "/([^/\\r\\n]*)/"
   },
   "rule_definition" : {
      ".all" : [
         {
            ".rgx" : "\\s*"
         },
         {
            ".ref" : "rule_name"
         },
         {
            ".rgx" : "[\\ \\t]*:\\s*"
         },
         {
            ".ref" : "rule_group"
         },
         {
            ".ref" : "ending"
         }
      ]
   },
   "rule_group" : {
      ".any" : [
         {
            ".ref" : "any_group"
         },
         {
            ".ref" : "all_group"
         }
      ]
   },
   "rule_item" : {
      ".any" : [
         {
            ".ref" : "rule_reference"
         },
         {
            ".ref" : "regular_expression"
         },
         {
            ".ref" : "bracketed_group"
         },
         {
            ".ref" : "whitespace_token"
         },
         {
            ".ref" : "error_message"
         }
      ]
   },
   "rule_name" : {
      ".rgx" : "([a-zA-Z]\\w*)\\b"
   },
   "rule_part" : {
      "+max" : "2",
      "+min" : "1",
      ".ref" : "rule_item",
      ".sep" : {
         ".rgx" : "\\s+(%{1,2})\\s+"
      }
   },
   "rule_reference" : {
      ".any" : [
         {
            ".rgx" : "([!=\\+\\-\\.]?)<([a-zA-Z]\\w*)\\b>((?:[\\*\\+\\?]|[0-9]+(?:\\-[0-9]+|\\+)?)?)"
         },
         {
            ".rgx" : "([!=\\+\\-\\.]?)([a-zA-Z]\\w*)\\b((?:[\\*\\+\\?]|[0-9]+(?:\\-[0-9]+|\\+)?)?)(?!:)"
         }
      ]
   },
   "rule_section" : {
      "+min" : 0,
      ".any" : [
         {
            ".ref" : "rule_definition"
         },
         {
            "-skip" : 1,
            ".ref" : "comment"
         }
      ]
   },
   "whitespace_token" : {
      ".rgx" : "(\\~\\~?)"
   }
}
