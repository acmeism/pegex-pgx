---
+top: grammar
all_group:
  .all:
  - .rul: rule_item
  - +mod: '*'
    .all:
    - .rgx: \s*
    - .rul: rule_item
any_group:
  .all:
  - .rul: rule_item
  - +mod: +
    .all:
    - .rgx: \s*\|\s*
    - .rul: rule_item
bracketed_group:
  .all:
  - .rgx: \[\s*
  - .rul: rule_group
  - .rgx: \s*\]([\*\+\?]?)
comment:
  .rgx: (?:[\ \t]*\r?\n|\#.*\r?\n)
error_message:
  .rgx: '`([^`\r\n]*)`'
grammar:
  .all:
  - +mod: +
    .all:
    - +mod: '*'
      .rul: comment
    - .rul: rule_definition
  - +mod: '*'
    .rul: comment
regular_expression:
  .rgx: /([^/\r\n]*)/
rule_definition:
  .all:
  - .rgx: \s*
  - .rul: rule_name
  - .rgx: '[\ \t]*:\s*'
  - .rul: rule_group
  - .rul: rule_ending
rule_ending:
  .rgx: \s*?(?:\n\s*|;\s*|\z)
rule_group:
  .any:
  - .rul: any_group
  - .rul: all_group
rule_item:
  .any:
  - .rul: rule_reference
  - .rul: regular_expression
  - .rul: bracketed_group
  - .rul: error_message
rule_name:
  .rgx: ([a-zA-Z]\w*)
rule_reference:
  .rgx: ([!=]?)<([a-zA-Z]\w*)>([\*\+\?]?)
