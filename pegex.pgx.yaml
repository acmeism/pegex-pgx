---
+grammar: pegex
+toprule: grammar
+version: 0.2.0
ERROR_inner_bracketed_group:
  .any:
  - .all:
    - +asr: 1
      .ref: doc_ending
    - .err: Runaway rule group. No ending parens at EOF
  - .all:
    - .rgx: (?=(?:\s|\#.*(?:\n|\z))*\)[^\w\(\)</\~\|`\s\*\+\?!=\+\-\.:;])
    - .err: Illegal character in group rule quantifier
ERROR_meta_definition:
  .all:
  - .rgx: (?=%\w+)
  - .err: Illegal meta rule
ERROR_rule_ending:
  .err: Rule ending syntax error
ERROR_rule_start:
  .all:
  - +asr: -1
    .ref: doc_ending
  - .err: Rule header syntax error
all_group:
  .all:
  - .ref: rule_part
  - +min: 0
    .all:
    - .rgx: (?:\s|\#.*(?:\n|\z))*
    - .ref: rule_part
any_group:
  .all:
  - .ref: all_group
  - +min: 0
    .all:
    - .rgx: (?:\s|\#.*(?:\n|\z))*\|(?:\s|\#.*(?:\n|\z))*
    - .ref: all_group
bracketed_group:
  .all:
  - .rgx: (\.?)\((?:\s|\#.*(?:\n|\z))*
  - .ref: rule_group
  - .any:
    - .ref: ERROR_inner_bracketed_group
    - .rgx: (?:\s|\#.*(?:\n|\z))*\)((?:[\*\+\?]|[0-9]+(?:\-[0-9]+|\+)?)?)
doc_ending:
  .rgx: (?:\s|\#.*(?:\n|\z))*\z
ending:
  .rgx: (?:\s|\#.*(?:\n|\z))*?(?:\n(?:\s|\#.*(?:\n|\z))*|;(?:\s|\#.*(?:\n|\z))*|\#.*(?:\n|\z)(?:\s|\#.*(?:\n|\z))*;?(?:\s|\#.*(?:\n|\z))*|\z)
error_message:
  .rgx: '`([^`\r\n]*)`'
grammar:
  .all:
  - .ref: meta_section
  - .ref: rule_section
meta_definition:
  .any:
  - .rgx: '%(grammar|extends|include|version)[\ \t]+[\ \t]*([^;\n]*?)[\ \t]*(?:\s|\#.*(?:\n|\z))*?(?:\n(?:\s|\#.*(?:\n|\z))*|;(?:\s|\#.*(?:\n|\z))*|\#.*(?:\n|\z)(?:\s|\#.*(?:\n|\z))*;?(?:\s|\#.*(?:\n|\z))*|\z)'
  - .ref: ERROR_meta_definition
meta_section:
  +min: 0
  .any:
  - .ref: meta_definition
  - .rgx: (?:\s|\#.*(?:\n|\z))+
regular_expression:
  .rgx: /([^/]*)/
rule_definition:
  .all:
  - .ref: rule_start
  - .ref: rule_group
  - .any:
    - .ref: ending
    - .ref: ERROR_rule_ending
rule_group:
  .ref: any_group
rule_item:
  .any:
  - .ref: rule_reference
  - .ref: regular_expression
  - .ref: bracketed_group
  - .ref: whitespace_token
  - .ref: error_message
rule_part:
  +max: '2'
  +min: '1'
  .ref: rule_item
  .sep:
    .rgx: (?:\s|\#.*(?:\n|\z))+(%{1,2})(?:\s|\#.*(?:\n|\z))+
rule_reference:
  .rgx: ([!=\+\-\.]?)(?:([a-zA-Z]\w*\b)|(?:<([a-zA-Z]\w*\b)>))((?:[\*\+\?]|[0-9]+(?:\-[0-9]+|\+)?)?)(?![\
    \t]*:)
rule_section:
  +min: 0
  .any:
  - .ref: rule_definition
  - .rgx: (?:\s|\#.*(?:\n|\z))+
rule_start:
  .any:
  - .rgx: ([a-zA-Z]\w*\b)[\ \t]*:(?:\s|\#.*(?:\n|\z))*
  - .ref: ERROR_rule_start
whitespace_token:
  .rgx: (\~+)
