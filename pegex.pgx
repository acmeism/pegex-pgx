# This is the Pegex grammar for Pegex grammars!

%grammar pegex
%version 0.1.0


grammar: meta_section rule_section

meta_section: ( meta_definition | ~~ )*

rule_section: ( rule_definition | ~~ )*

meta_definition:
    / <PERCENT> <meta_name> <BLANK>+ <meta_value> /

rule_definition: rule_start rule_group ending

rule_start: / ( <rule_name> ) <BLANK>* <COLON> ~ /

rule_group: any_group | all_group

all_group: rule_part+ % ~

any_group: <rule_part>2+ % / ~ <PIPE> ~ /

rule_part: <rule_item>1-2 % / ~~ ( <PERCENT>{1,2} ) ~~ /

rule_item:
    rule_reference |
    regular_expression |
    bracketed_group |
    whitespace_token |
    error_message

rule_reference:
    /
        ( <rule_modifier>? )        # [=!.-+]
            (:                      # foo | <foo>
                ( <rule_name> ) |
                (: <LANGLE> ( <rule_name> ) <RANGLE> )
            )
        ( <rule_quantifier>? )      # [?*+] 2+ 2-3
        (! <BLANK>* <COLON> )       # Avoid parsing 'foo:'
    /                               # as a rule reference.

regular_expression:
    / <SLASH> ( [^ <SLASH> ]* ) <SLASH> /

bracketed_group:
    / ( <group_modifier>? ) <LPAREN> ~ /
    rule_group
    / ~ <RPAREN> ( <rule_quantifier>? ) /

whitespace_token:
    / ( <TILDE>+ ) /

error_message:
    / <GRAVE> ( [^ <GRAVE> <DOS> ]* ) <GRAVE> /

rule_modifier: / [ <BANG> <EQUAL> <PLUS> <DASH> <DOT> ] /

group_modifier: / <DOT> /

rule_quantifier:
    / (:
        [ <STAR> <PLUS> <QMARK> ] |
        <DIGIT>+ (: <DASH><DIGIT>+ | <PLUS>)?
    ) /

meta_name:
    / ( grammar | extends | include | version) /

meta_value:
    /
        <BLANK>*
        ( [^ <SEMI> <BREAK> ]*? )
        <BLANK>*
        <ending>
    /

rule_name: / <ALPHA> <WORD>* \b /

ending: / ~? (: <BREAK> ~ | <SEMI> ~ | <EOS> ) /

ws: / (: <WS> | <comment> ) /

comment: / <HASH> <ANY>* <BREAK> /
